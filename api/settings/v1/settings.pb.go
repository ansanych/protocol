// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: settings/v1/settings.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Pages int64 `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Code  string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{1}
}

func (x *Role) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Role) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Role) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenValidation bool    `protobuf:"varint,1,opt,name=tokenValidation,proto3" json:"tokenValidation,omitempty"`
	UserID          int64   `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	CompanyID       int64   `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Roles           []*Role `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{2}
}

func (x *AuthRequest) GetTokenValidation() bool {
	if x != nil {
		return x.TokenValidation
	}
	return false
}

func (x *AuthRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AuthRequest) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AuthRequest) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type Tax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Percent     int32  `protobuf:"varint,4,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *Tax) Reset() {
	*x = Tax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tax) ProtoMessage() {}

func (x *Tax) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tax.ProtoReflect.Descriptor instead.
func (*Tax) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{3}
}

func (x *Tax) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Tax) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Tax) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tax) GetPercent() int32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type TaxesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taxes []*Tax `protobuf:"bytes,1,rep,name=taxes,proto3" json:"taxes,omitempty"`
}

func (x *TaxesReply) Reset() {
	*x = TaxesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxesReply) ProtoMessage() {}

func (x *TaxesReply) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxesReply.ProtoReflect.Descriptor instead.
func (*TaxesReply) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{4}
}

func (x *TaxesReply) GetTaxes() []*Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

type BoolReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BoolReply) Reset() {
	*x = BoolReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolReply) ProtoMessage() {}

func (x *BoolReply) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolReply.ProtoReflect.Descriptor instead.
func (*BoolReply) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{5}
}

func (x *BoolReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetCompanyTaxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	TaxID int32        `protobuf:"varint,2,opt,name=taxID,proto3" json:"taxID,omitempty"`
	Year  int32        `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *SetCompanyTaxRequest) Reset() {
	*x = SetCompanyTaxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCompanyTaxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCompanyTaxRequest) ProtoMessage() {}

func (x *SetCompanyTaxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCompanyTaxRequest.ProtoReflect.Descriptor instead.
func (*SetCompanyTaxRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{6}
}

func (x *SetCompanyTaxRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetCompanyTaxRequest) GetTaxID() int32 {
	if x != nil {
		return x.TaxID
	}
	return 0
}

func (x *SetCompanyTaxRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type CompanyTax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tax  *Tax  `protobuf:"bytes,1,opt,name=tax,proto3" json:"tax,omitempty"`
	Year int32 `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *CompanyTax) Reset() {
	*x = CompanyTax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyTax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyTax) ProtoMessage() {}

func (x *CompanyTax) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyTax.ProtoReflect.Descriptor instead.
func (*CompanyTax) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{7}
}

func (x *CompanyTax) GetTax() *Tax {
	if x != nil {
		return x.Tax
	}
	return nil
}

func (x *CompanyTax) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type CompanyTaxesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taxes []*CompanyTax `protobuf:"bytes,1,rep,name=taxes,proto3" json:"taxes,omitempty"`
}

func (x *CompanyTaxesReply) Reset() {
	*x = CompanyTaxesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyTaxesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyTaxesReply) ProtoMessage() {}

func (x *CompanyTaxesReply) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyTaxesReply.ProtoReflect.Descriptor instead.
func (*CompanyTaxesReply) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{8}
}

func (x *CompanyTaxesReply) GetTaxes() []*CompanyTax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

type GetCompanyTaxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Year int32        `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *GetCompanyTaxRequest) Reset() {
	*x = GetCompanyTaxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyTaxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyTaxRequest) ProtoMessage() {}

func (x *GetCompanyTaxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyTaxRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyTaxRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{9}
}

func (x *GetCompanyTaxRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetCompanyTaxRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type Brand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Logo        string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Global      bool   `protobuf:"varint,6,opt,name=global,proto3" json:"global,omitempty"`
}

func (x *Brand) Reset() {
	*x = Brand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{10}
}

func (x *Brand) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Brand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Brand) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Brand) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Brand) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

type GetBrandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Page int64        `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetBrandsRequest) Reset() {
	*x = GetBrandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandsRequest) ProtoMessage() {}

func (x *GetBrandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandsRequest.ProtoReflect.Descriptor instead.
func (*GetBrandsRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{11}
}

func (x *GetBrandsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetBrandsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth      *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	BrandID   int64        `protobuf:"varint,2,opt,name=brandID,proto3" json:"brandID,omitempty"`
	BrandName string       `protobuf:"bytes,3,opt,name=brandName,proto3" json:"brandName,omitempty"`
}

func (x *GetBrandRequest) Reset() {
	*x = GetBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandRequest) ProtoMessage() {}

func (x *GetBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandRequest.ProtoReflect.Descriptor instead.
func (*GetBrandRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{12}
}

func (x *GetBrandRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetBrandRequest) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

func (x *GetBrandRequest) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

type BrandsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brands     []*Brand    `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *BrandsReply) Reset() {
	*x = BrandsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandsReply) ProtoMessage() {}

func (x *BrandsReply) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandsReply.ProtoReflect.Descriptor instead.
func (*BrandsReply) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{13}
}

func (x *BrandsReply) GetBrands() []*Brand {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *BrandsReply) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Name string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SearchBrandRequest) Reset() {
	*x = SearchBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBrandRequest) ProtoMessage() {}

func (x *SearchBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBrandRequest.ProtoReflect.Descriptor instead.
func (*SearchBrandRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{14}
}

func (x *SearchBrandRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SearchBrandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Brand *Brand       `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *SetBrandRequest) Reset() {
	*x = SetBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBrandRequest) ProtoMessage() {}

func (x *SetBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBrandRequest.ProtoReflect.Descriptor instead.
func (*SetBrandRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{15}
}

func (x *SetBrandRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetBrandRequest) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type GetCompanyBrandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Page int64        `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCompanyBrandsRequest) Reset() {
	*x = GetCompanyBrandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyBrandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyBrandsRequest) ProtoMessage() {}

func (x *GetCompanyBrandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyBrandsRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyBrandsRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{16}
}

func (x *GetCompanyBrandsRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetCompanyBrandsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type InsertReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *InsertReply) Reset() {
	*x = InsertReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertReply) ProtoMessage() {}

func (x *InsertReply) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertReply.ProtoReflect.Descriptor instead.
func (*InsertReply) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{17}
}

func (x *InsertReply) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Margin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Min     float32 `protobuf:"fixed32,2,opt,name=min,proto3" json:"min,omitempty"`
	Mid     float32 `protobuf:"fixed32,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Max     float32 `protobuf:"fixed32,4,opt,name=max,proto3" json:"max,omitempty"`
	Created string  `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *Margin) Reset() {
	*x = Margin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Margin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Margin) ProtoMessage() {}

func (x *Margin) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Margin.ProtoReflect.Descriptor instead.
func (*Margin) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{18}
}

func (x *Margin) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Margin) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Margin) GetMid() float32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Margin) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Margin) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

type Margins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Margins []*Margin `protobuf:"bytes,1,rep,name=margins,proto3" json:"margins,omitempty"`
}

func (x *Margins) Reset() {
	*x = Margins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Margins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Margins) ProtoMessage() {}

func (x *Margins) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Margins.ProtoReflect.Descriptor instead.
func (*Margins) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{19}
}

func (x *Margins) GetMargins() []*Margin {
	if x != nil {
		return x.Margins
	}
	return nil
}

type MarginBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	BrandID int64        `protobuf:"varint,2,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *MarginBrandRequest) Reset() {
	*x = MarginBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginBrandRequest) ProtoMessage() {}

func (x *MarginBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginBrandRequest.ProtoReflect.Descriptor instead.
func (*MarginBrandRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{20}
}

func (x *MarginBrandRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *MarginBrandRequest) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type SetMarginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	BrandID int64        `protobuf:"varint,2,opt,name=brandID,proto3" json:"brandID,omitempty"`
	Min     float32      `protobuf:"fixed32,3,opt,name=min,proto3" json:"min,omitempty"`
	Mid     float32      `protobuf:"fixed32,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Max     float32      `protobuf:"fixed32,5,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *SetMarginRequest) Reset() {
	*x = SetMarginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMarginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMarginRequest) ProtoMessage() {}

func (x *SetMarginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMarginRequest.ProtoReflect.Descriptor instead.
func (*SetMarginRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{21}
}

func (x *SetMarginRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetMarginRequest) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

func (x *SetMarginRequest) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *SetMarginRequest) GetMid() float32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *SetMarginRequest) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type UpdateMarginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	MarginID int64        `protobuf:"varint,2,opt,name=marginID,proto3" json:"marginID,omitempty"`
	Min      float32      `protobuf:"fixed32,3,opt,name=min,proto3" json:"min,omitempty"`
	Mid      float32      `protobuf:"fixed32,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Max      float32      `protobuf:"fixed32,5,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *UpdateMarginRequest) Reset() {
	*x = UpdateMarginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarginRequest) ProtoMessage() {}

func (x *UpdateMarginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarginRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarginRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateMarginRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UpdateMarginRequest) GetMarginID() int64 {
	if x != nil {
		return x.MarginID
	}
	return 0
}

func (x *UpdateMarginRequest) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *UpdateMarginRequest) GetMid() float32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UpdateMarginRequest) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	MarginID int64        `protobuf:"varint,2,opt,name=marginID,proto3" json:"marginID,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_v1_settings_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settings_v1_settings_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_settings_v1_settings_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteRequest) GetAuth() *AuthRequest {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *DeleteRequest) GetMarginID() int64 {
	if x != nil {
		return x.MarginID
	}
	return 0
}

var File_settings_v1_settings_proto protoreflect.FileDescriptor

var file_settings_v1_settings_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x40,
	0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x93, 0x01, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x03, 0x54, 0x61, 0x78, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22,
	0x31, 0x0a, 0x0a, 0x54, 0x61, 0x78, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78,
	0x65, 0x73, 0x22, 0x23, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6b, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61,
	0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x22, 0x41, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54,
	0x61, 0x78, 0x12, 0x1f, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x03,
	0x74, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x3f, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x54, 0x61, 0x78, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61,
	0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22,
	0x8b, 0x01, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x22, 0x51, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x74, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x0b, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x34,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x58,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x68, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x35, 0x0a, 0x07, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x07,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52,
	0x07, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x22, 0x59, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x44, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x56, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x49, 0x44,
	0x32, 0xc9, 0x09, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x39, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x54, 0x61, 0x78, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x78, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x78, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54,
	0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61,
	0x78, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x78,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x78, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x54, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x78,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x12, 0x44,
	0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12,
	0x1c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x1a,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x1e, 0x5a, 0x1c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61, 0x6e,
	0x79, 0x63, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_settings_v1_settings_proto_rawDescOnce sync.Once
	file_settings_v1_settings_proto_rawDescData = file_settings_v1_settings_proto_rawDesc
)

func file_settings_v1_settings_proto_rawDescGZIP() []byte {
	file_settings_v1_settings_proto_rawDescOnce.Do(func() {
		file_settings_v1_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_settings_v1_settings_proto_rawDescData)
	})
	return file_settings_v1_settings_proto_rawDescData
}

var file_settings_v1_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_settings_v1_settings_proto_goTypes = []interface{}{
	(*Pagination)(nil),              // 0: settings.Pagination
	(*Role)(nil),                    // 1: settings.Role
	(*AuthRequest)(nil),             // 2: settings.AuthRequest
	(*Tax)(nil),                     // 3: settings.Tax
	(*TaxesReply)(nil),              // 4: settings.TaxesReply
	(*BoolReply)(nil),               // 5: settings.BoolReply
	(*SetCompanyTaxRequest)(nil),    // 6: settings.SetCompanyTaxRequest
	(*CompanyTax)(nil),              // 7: settings.CompanyTax
	(*CompanyTaxesReply)(nil),       // 8: settings.CompanyTaxesReply
	(*GetCompanyTaxRequest)(nil),    // 9: settings.GetCompanyTaxRequest
	(*Brand)(nil),                   // 10: settings.Brand
	(*GetBrandsRequest)(nil),        // 11: settings.GetBrandsRequest
	(*GetBrandRequest)(nil),         // 12: settings.GetBrandRequest
	(*BrandsReply)(nil),             // 13: settings.BrandsReply
	(*SearchBrandRequest)(nil),      // 14: settings.SearchBrandRequest
	(*SetBrandRequest)(nil),         // 15: settings.SetBrandRequest
	(*GetCompanyBrandsRequest)(nil), // 16: settings.GetCompanyBrandsRequest
	(*InsertReply)(nil),             // 17: settings.InsertReply
	(*Margin)(nil),                  // 18: settings.Margin
	(*Margins)(nil),                 // 19: settings.Margins
	(*MarginBrandRequest)(nil),      // 20: settings.MarginBrandRequest
	(*SetMarginRequest)(nil),        // 21: settings.SetMarginRequest
	(*UpdateMarginRequest)(nil),     // 22: settings.UpdateMarginRequest
	(*DeleteRequest)(nil),           // 23: settings.DeleteRequest
}
var file_settings_v1_settings_proto_depIdxs = []int32{
	1,  // 0: settings.AuthRequest.roles:type_name -> settings.Role
	3,  // 1: settings.TaxesReply.taxes:type_name -> settings.Tax
	2,  // 2: settings.SetCompanyTaxRequest.auth:type_name -> settings.AuthRequest
	3,  // 3: settings.CompanyTax.tax:type_name -> settings.Tax
	7,  // 4: settings.CompanyTaxesReply.taxes:type_name -> settings.CompanyTax
	2,  // 5: settings.GetCompanyTaxRequest.auth:type_name -> settings.AuthRequest
	2,  // 6: settings.GetBrandsRequest.auth:type_name -> settings.AuthRequest
	2,  // 7: settings.GetBrandRequest.auth:type_name -> settings.AuthRequest
	10, // 8: settings.BrandsReply.brands:type_name -> settings.Brand
	0,  // 9: settings.BrandsReply.pagination:type_name -> settings.Pagination
	2,  // 10: settings.SearchBrandRequest.auth:type_name -> settings.AuthRequest
	2,  // 11: settings.SetBrandRequest.auth:type_name -> settings.AuthRequest
	10, // 12: settings.SetBrandRequest.brand:type_name -> settings.Brand
	2,  // 13: settings.GetCompanyBrandsRequest.auth:type_name -> settings.AuthRequest
	18, // 14: settings.Margins.margins:type_name -> settings.Margin
	2,  // 15: settings.MarginBrandRequest.auth:type_name -> settings.AuthRequest
	2,  // 16: settings.SetMarginRequest.auth:type_name -> settings.AuthRequest
	2,  // 17: settings.UpdateMarginRequest.auth:type_name -> settings.AuthRequest
	2,  // 18: settings.DeleteRequest.auth:type_name -> settings.AuthRequest
	2,  // 19: settings.Settings.GetTaxes:input_type -> settings.AuthRequest
	6,  // 20: settings.Settings.SetCompanyTax:input_type -> settings.SetCompanyTaxRequest
	2,  // 21: settings.Settings.GetCompanyTaxes:input_type -> settings.AuthRequest
	9,  // 22: settings.Settings.GetCompanyTax:input_type -> settings.GetCompanyTaxRequest
	11, // 23: settings.Settings.GetBrands:input_type -> settings.GetBrandsRequest
	12, // 24: settings.Settings.GetBrand:input_type -> settings.GetBrandRequest
	14, // 25: settings.Settings.SearchBrand:input_type -> settings.SearchBrandRequest
	15, // 26: settings.Settings.SetBrand:input_type -> settings.SetBrandRequest
	16, // 27: settings.Settings.GetCompanyBrands:input_type -> settings.GetCompanyBrandsRequest
	12, // 28: settings.Settings.GetCompanyBrand:input_type -> settings.GetBrandRequest
	2,  // 29: settings.Settings.GetMargin:input_type -> settings.AuthRequest
	20, // 30: settings.Settings.GetMarginBrand:input_type -> settings.MarginBrandRequest
	21, // 31: settings.Settings.SetMargin:input_type -> settings.SetMarginRequest
	21, // 32: settings.Settings.SetMarginBrand:input_type -> settings.SetMarginRequest
	22, // 33: settings.Settings.UpdateMargin:input_type -> settings.UpdateMarginRequest
	2,  // 34: settings.Settings.GetMarginArchive:input_type -> settings.AuthRequest
	20, // 35: settings.Settings.GetMarginArchiveBrand:input_type -> settings.MarginBrandRequest
	23, // 36: settings.Settings.DeleteMargin:input_type -> settings.DeleteRequest
	4,  // 37: settings.Settings.GetTaxes:output_type -> settings.TaxesReply
	5,  // 38: settings.Settings.SetCompanyTax:output_type -> settings.BoolReply
	8,  // 39: settings.Settings.GetCompanyTaxes:output_type -> settings.CompanyTaxesReply
	7,  // 40: settings.Settings.GetCompanyTax:output_type -> settings.CompanyTax
	13, // 41: settings.Settings.GetBrands:output_type -> settings.BrandsReply
	10, // 42: settings.Settings.GetBrand:output_type -> settings.Brand
	13, // 43: settings.Settings.SearchBrand:output_type -> settings.BrandsReply
	17, // 44: settings.Settings.SetBrand:output_type -> settings.InsertReply
	13, // 45: settings.Settings.GetCompanyBrands:output_type -> settings.BrandsReply
	10, // 46: settings.Settings.GetCompanyBrand:output_type -> settings.Brand
	18, // 47: settings.Settings.GetMargin:output_type -> settings.Margin
	18, // 48: settings.Settings.GetMarginBrand:output_type -> settings.Margin
	17, // 49: settings.Settings.SetMargin:output_type -> settings.InsertReply
	17, // 50: settings.Settings.SetMarginBrand:output_type -> settings.InsertReply
	5,  // 51: settings.Settings.UpdateMargin:output_type -> settings.BoolReply
	19, // 52: settings.Settings.GetMarginArchive:output_type -> settings.Margins
	19, // 53: settings.Settings.GetMarginArchiveBrand:output_type -> settings.Margins
	5,  // 54: settings.Settings.DeleteMargin:output_type -> settings.BoolReply
	37, // [37:55] is the sub-list for method output_type
	19, // [19:37] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_settings_v1_settings_proto_init() }
func file_settings_v1_settings_proto_init() {
	if File_settings_v1_settings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_settings_v1_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaxesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCompanyTaxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyTax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyTaxesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyTaxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyBrandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Margin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Margins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMarginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_v1_settings_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settings_v1_settings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settings_v1_settings_proto_goTypes,
		DependencyIndexes: file_settings_v1_settings_proto_depIdxs,
		MessageInfos:      file_settings_v1_settings_proto_msgTypes,
	}.Build()
	File_settings_v1_settings_proto = out.File
	file_settings_v1_settings_proto_rawDesc = nil
	file_settings_v1_settings_proto_goTypes = nil
	file_settings_v1_settings_proto_depIdxs = nil
}
